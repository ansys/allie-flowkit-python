[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "allie-flowkit-python"
version = "0.1.dev0"
description = "A Python service for Allie Flowkit."
readme = "README.md"
requires-python = ">=3.10,<4"
license = { file = "LICENSE" }
authors = [{ name = "ANSYS, Inc.", email = "pyansys.core@ansys.com" }]
maintainers = [{ name = "ANSYS, Inc.", email = "pyansys.core@ansys.com" }]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "azure-identity >= 1.17.1,<2",
    "azure-keyvault-secrets >= 4.8.0,<5",
    "fastapi >= 0.111.1,<1",
    "langchain >= 0.2.11,<1",
    "pydantic >= 2.8.2,<3",
    "python_pptx >= 0.6.23,< 2",
    "PyYAML >= 6.0.1,<7",
    "httpx >= 0.27.0",
    "pdfminer.six == 20240706",
]

[project.optional-dependencies]
all = [
    "uvicorn[standard] >= 0.30.5,<1",
]

tests = [
    "pytest >= 8.3.2,<9",
    "pytest-cov >= 5.0.0,<6",
    "pytest-asyncio >= 0.23.8,<1",
]
doc = [
    "ansys-sphinx-theme==1.1.2",
    "numpydoc==1.8.0",
    "sphinx==8.0.2",
    "sphinx-autoapi==3.3.2",
    "sphinx-copybutton==0.5.2",
    "sphinx_design==0.6.1",
    "sphinx-gallery==0.17.1",
    "sphinx-jinja==2.0.2",
]

[project.urls]
Source = "https://github.com/ansys/allie-flowkit-python"
Issues = "https://github.com/ansys/allie-flowkit-python/issues"
Discussions = "https://github.com/ansys/allie-flowkit-python/discussions"
Releases = "https://github.com/ansys/allie-flowkit-python/releases/"

[project.scripts]
allie-flowkit-python = "allie.flowkit.__main__:main"

[tool.flit.module]
name = "allie.flowkit"

[tool.pytest.ini_options]
addopts = "--cov=allie.flowkit --cov-report=term --cov-report=html:.cov/html --cov-report=xml:.cov/coverage.xml"

[tool.codespell]
skip = "*.pyc,*.xml,*.txt,*.gif,*.png,*.jpg,*.js,*.html,*.doctree,*.ttf,*.woff,*.woff2,*.eot,*.mp4,*.inv,*.pickle,*.ipynb,flycheck*,./.git/*,./.hypothesis/*,*.yml,./docs/build/*,./docs/images/*,./dist/*,*~,.hypothesis*,./docs/source/examples/*,*cover,*.dat,*.mac"

[tool.black]
line-length = 100

[tool.isort]
profile = "black"
force_sort_within_sections = true
line_length = 100
default_section = "THIRDPARTY"
src_paths = ["doc", "src", "tests"]

[tool.pydocstyle]
convention = "numpy"

[tool.mypy]
strict = true
ignore_missing_imports = true

[tool.ruff]
line-length = 120
extend-exclude = ["examples/**/*.py"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle, see https://beta.ruff.rs/docs/rules/#pycodestyle-e-w
    "D",   # pydocstyle, see https://beta.ruff.rs/docs/rules/#pydocstyle-d
    "F",   # pyflakes, see https://beta.ruff.rs/docs/rules/#pyflakes-f
    "I",   # isort, see https://beta.ruff.rs/docs/rules/#isort-i
    "N",   # pep8-naming, see https://beta.ruff.rs/docs/rules/#pep8-naming-n
    "PTH", # flake8-use-pathlib, https://beta.ruff.rs/docs/rules/#flake8-use-pathlib-pth
]
ignore = ["D416"]

[tool.ruff.format]
quote-style = "double"
line-ending = "auto"

[tool.ruff.lint.isort]
combine-as-imports = true
force-sort-within-sections = true
known-first-party = ["ansys"]

[tool.ruff.lint.pydocstyle]
# Settings: https://docs.astral.sh/ruff/settings/#lintpydocstyle
convention = "google"

[tool.setuptools.packages.find]
include = ["app", "docker", "configs"]

